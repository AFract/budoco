@page
@model IssueModel
@using Microsoft.AspNetCore.Http
@{
    ViewData["Title"] = "Issue";
}
<partial name="_FlashPartial" />

<div>
  
    <a href="Issues">Back to Issues</a>
    &nbsp;&nbsp;&nbsp;
    @{
        
        if (Model.prev_issue_id_in_list != 0)
        {
            <a href="Issue?id=@Model.prev_issue_id_in_list">Prev</a>
        }
        else
        {
            <span class="gray">Prev</span>
        }

        <span>&nbsp;&nbsp;</span>
        if (Model.next_issue_id_in_list != 0)
        {
            <a href="Issue?id=@Model.next_issue_id_in_list">Next</a>
        }
        else
        {
            <span class="gray">Next</span>
        }

    }
</div>

<div class="form_div">
    <form class="issue_form" method="post">
        <input type="hidden" asp-for="force_create" value=""/>
        @{
            
            if (Model.id != 0)
            {
                <div id="id_and_info">
                    <label>ID @Model.id</label>
                    <span>
                    Created by @Model.created_by_username on @Model.created_date 
                    @{if (Model.last_updated_username != "")
                        {
                        <span>, Last updated by @Model.last_updated_username on @Model.last_updated_date</span>
                            
                        }
                    }
                    </span>
                </div>
            
            }
        }
        
        <div>
            <label>Description</label>
            <input asp-for="description" value="@Model.description" disabled="@Model.null_or_disabled"></input>
        </div>

        <div>
            <label>Details</label>
            <textarea asp-for="details" value="@Model.details" disabled="@Model.null_or_disabled"></textarea>
        </div>
        
        <div><div class="issue_dropdown_container">

        <div id="category_elements" class="issue_dropdown_group">
            <label>Category</label>
            <input readonly asp-for="category_text"/>
            <input type="hidden" asp-for="category_id"/>
            
            <span onclick="clear_dropdown('#category_')" class="readonly_input_edit">Clear&nbsp;</span>
            <span onclick="start_dropdown('#category_')" class="readonly_input_edit">Select</span>
            
            <select class="issue_readonly_input_select" asp-for="category_selected_id" 
            onchange="dropdown_on_change('#category_')" 
            onblur="close_dropdown('#category_')"
            asp-items="@Model.category_list" disabled="@Model.null_or_disabled">
            </select>
        </div>


        <div id="status_elements" class="issue_dropdown_group">
            <label>Status</label>
            <input readonly asp-for="status_text"/>
            <input type="hidden" asp-for="status_id"/>
        
            <span onclick="clear_dropdown('#status_')" class="readonly_input_edit">Clear&nbsp;</span>
            <span onclick="start_dropdown('#status_')" class="readonly_input_edit">Select</span>
        
            <select class="issue_readonly_input_select" asp-for="status_selected_id" 
            onchange="dropdown_on_change('#status_')" 
            onblur="close_dropdown('#status_')"
            asp-items="@Model.status_list" disabled="@Model.null_or_disabled">
            </select>
        </div>

  

        <div id="project_elements" class="issue_dropdown_group">
            <label>Project</label>
            <input readonly asp-for="project_text"/>
            <input type="hidden" asp-for="project_id"/>
            <span onclick="clear_dropdown('#project_')" class="readonly_input_edit">Clear&nbsp;</span>
            <span onclick="start_dropdown('#project_')" class="readonly_input_edit">Select</span>
    
            <select class="issue_readonly_input_select" asp-for="project_selected_id" 
            onchange="dropdown_on_change('#project_')" 
            onblur="close_dropdown('#project_')"
            asp-items="@Model.project_list" disabled="@Model.null_or_disabled">
            </select>
        </div>


        <div id="organization_elements" class="issue_dropdown_group">
            <label>Organization</label>
            <input readonly asp-for="organization_text"/>
            <input type="hidden" asp-for="organization_id"/>
            <span onclick="clear_dropdown('#organization_')" class="readonly_input_edit">Clear&nbsp;</span>
            <span onclick="start_dropdown('#organization_')" class="readonly_input_edit">Select</span>
       
            <select class="issue_readonly_input_select" asp-for="organization_selected_id" 
            onchange="dropdown_on_change('#organization_')" 
            onblur="close_dropdown('#organization_')"
            asp-items="@Model.organization_list" disabled="@Model.null_or_disabled">
            </select>
        </div>


        <div id="priority_elements" class="issue_dropdown_group">
            <label>Priority</label>
            <input readonly asp-for="priority_text"/>
            <input type="hidden" asp-for="priority_id"/>
            <span onclick="clear_dropdown('#priority_')" class="readonly_input_edit">Clear&nbsp;</span>
            <span onclick="start_dropdown('#priority_')" class="readonly_input_edit">Select</span>
     
            <select class="issue_readonly_input_select" asp-for="priority_selected_id" 
            onchange="dropdown_on_change('#priority_')" 
            onblur="close_dropdown('#priority_')"
            asp-items="@Model.priority_list" disabled="@Model.null_or_disabled">
            </select>
        </div>

        <div id="assigned_to_user_elements" class="issue_dropdown_group">
            <label>Assigned To</label>
            <input readonly asp-for="assigned_to_user_text"/>
            <input type="hidden" asp-for="assigned_to_user_id"/>
            <span onclick="clear_dropdown('#assigned_to_user_')" class="readonly_input_edit">Clear&nbsp;</span>
            <span onclick="start_dropdown('#assigned_to_user_')" class="readonly_input_edit">Select</span>
         
            <select class="issue_readonly_input_select" asp-for="assigned_to_user_selected_id" 
            onchange="dropdown_on_change('#assigned_to_user_')" 
            onblur="close_dropdown('#assigned_to_user_')"
            asp-items="@Model.assigned_to_user_list" disabled="@Model.null_or_disabled">
            </select>
        </div>
        </flex></div>
  

        @{
            if (Model.null_or_disabled is null)
            {
                string button_text = (Model.id == 0) ? "Create" : "Update";
                <div>
                    <button id="create_or_update_button" type="submit">@button_text</button>
                </div>
            }
        }


    </form>
</div>

<div>
    <div class="fake_link" onclick="prep_for_another()">Create another issue like this one</div>
</div>

@{
    if (Model.id != 0)
    {
        <div id="posts"></div>

        <div class="form_div">
            <form class="post_form" id="post_form" method="post" enctype="multipart/form-data">
                
                <div>
                    <textarea name="post_text" id="post_text"></textarea>
                </div>

                <div class="post_form_footer">
                    <button type="button" onclick="submit_post()">Add Comment</button>
                    
                    <label class="file_upload_label fake_link">
                        Click here to attach file
                        <input type="file" class="file_upload_input" asp-for="uploaded_file" />
                    </label>
                    <span id="file_name"></span>
                </div>
            
            </form>
        </div>
     }
}

@section Scripts {
    
    <script>
        
    $(document).ready(function() {
        $("#uploaded_file").on('change', function () {
            $("#file_name").html(this.files[0].name);
        });

        // hide our dropdowns that show when user clicks "Edit"
        $(".issue_form").click(function(event){
            if (event.target.className == "readonly_input_edit"
            || event.target.className == "issue_readonly_input_select") {
                 // do nothing
            } else {
                $(".issue_readonly_input_select").css("visibility", "hidden")
            }
        });

        get_posts()
     });
    

    function start_dropdown(prefix) 
    {
        dropdown = $(prefix + "selected_id")
        dropdown.width("200px")
        dropdown.css("min-width", "200px")
        dropdown.css("visibility", "visible")
    }
    
    
    function dropdown_on_change(prefix)
    {     
        dropdown = $(prefix + "selected_id").css("visibility", "hidden");
        selected_option = $(prefix + "selected_id option:selected");
        selected_val = selected_option.val()
        if (selected_val != "0") {
            $(prefix + "text").val(selected_option.text());
        }
        else
        {
            $(prefix + "text").val("");
        }
        $(prefix + "id").val(selected_val);
        close_dropdown(prefix);
    }
 
    function close_dropdown(prefix) {
        dropdown = $(prefix + "selected_id").css("visibility", "hidden");
    }

    function clear_dropdown(prefix)
    {     
        $(prefix + "selected_id option:selected").prop("selected", false)
        $(prefix + "text").val("");
        $(prefix + "id").val(0);
    }

    function get_posts() {
        $.ajax({
            type: "Get",
            url: "/Issue?handler=Posts&id=@Model.id",
 
            success: function (posts_as_html) {
                // blank out form
                $("#post_text").val("");
                $("#file_name").html("");
                $("#posts").html(posts_as_html)
            },
            
            failure: function (response) {
                alert(response);
            },

            statusCode: {
                500: function() {
                    alert("get - server returned status code of 500");
                }
            }
        });
    }
    
    function submit_post() {
        $.ajax({
            url: '/Issue?id=@Model.id&handler=AddPost',
            data: new FormData(document.forms[1]),
            contentType: false,
            processData: false,
            type: 'post',
            
            success: function (posts_as_html) {
                // blank out the form we just posted from
                $("#post_text").val("");
                $("#file_name").html("");
                $("#posts").html(posts_as_html);
            },
            
            failure: function(response) {
                alert(response)
            },

            statusCode: {
                500: function() {
                    alert("post- server returned status code of 500");
                }
            }
        }) // end submit post
    } // end func

    function show_hide_image(image_div_id, link) {
        if ($(link).html() == "View") {
            $(link).html("Hide")
            $(image_div_id).show()
        }
        else {
            $(link).html("View")
            $(image_div_id).hide()
        }
    } // end func
    
    function prep_for_another() {
        $("#posts").html("")
        $("#id_and_info").html("")
        $("#force_create").val("force_create")
        $("#create_or_update_button").html("Create")
    }
    </script>

}

