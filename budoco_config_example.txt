##############################################################################
# Save this, but make a copy and rename that copy to budoco_config_active.txt
# Edit the values in the copy. 
###############################################################################
# Start of important settings
###############################################################################
# Database 
###############################################################################

DbServer: 127.0.0.1
DbDatabase: budoco
DbUser: postgres
DbPassword: YOUR_PASSWORD

###############################################################################
# SMTP - Outgoing email
#
# I tested with my usual email accounts, not a special service.
# For both Gmail and Yahoo, sending emails won't work until you go
# do stuff on their web sites. It's not easy to find. For Google
# you will get security alerts. For Yahoo, it will just fail. You
# have to generate a special password at their website, not YOUR_GMAIL
# usual. 
###############################################################################

# Using gmail as an example
SmtpHost: smtp.gmail.com
SmtpPort: 465
SmtpUser: YOUR_ACCOUNT@gmail.com
SmtpPassword: YOUR_PASSWORD

# I used yahoo mail:
# SmtpHost: smtp.mail.yahoo.com
# SmtpPort: 587

# This is for the links in emails that the app sends.
# For example, for new user registration, password reset.

WebsiteUrlRootWithoutSlash: https://YOURDOMAIN.COM
# or
# WebsiteUrlRootWithoutSlash: http://localhost:5000

###############################################################################
# IMAP - Incoming email 
#
# Budoco has this feature: If you send an email related to an issue, the
# recipient can reply and that reply email will be posted as a comment to 
# the issue.
################################################################################

# 1 = turn the feature on, 0 = turn it off

EnableIncomingEmail: 1
# This example uses Gmail
ImapHost: imap.gmail.com
ImapPort: 993
ImapUser: YOUR_ACCOUNT@gmail.com
ImapPassword: YOUR_PASSWORD

###############################################################################
# End of important settings, but you should read through the rest of this file
# to see what your choices are.
###############################################################################

OutgoingEmailDisplayName: Budoco

# For development/test, you can set to true to not send email
# 0 = DO send emails, 1 = do NOT send emails
DebugSkipSendingEmails: 0

# The app sends emails by putting them in an outgoing queue and then trying to
# send them. This setting controls how many attempts the app makes before
# giving up. See the Admin/Outgoing Email Queue page for more info.
MaxNumberOfSendingRetries: 3

# How frequently the app checks for incoming email. 
SecondsToSleepAfterCheckingIncomingEmail: 300

# When this is 1, you see the stack trace in the web page, but it might
# be too much info for production. When this is 0, you just see that there
# was an error and you have to look in the logs for the details.
UseDeveloperExceptionPage: 1

# You can brand it your way. Change the name. Change the logo colors and font.
# And if the issue form is too busy, you can hide some of the fields you don't use.
# See "custom_css_example.css"
AppName: Budoco
UseCustomCss: 0
CustomCssFilename: custom_css_example.css

# Number of rows on the issues page
RowsPerPage: 30
  
LogLocation: budoco_logs/budoco.txt

#https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings
DateFormat: yyyy-MM-dd HH:mm

# if 1, newly registered users start as inactive until admin sets to active
NewUserStartsInactive: 0
NewUserStartsReportOnly: 0

# For development, when a new user registers,
# confirm that registration automatically without 
# the user having to confirm by clicking the email
DebugAutoConfirmRegistration: 0

# In Query page, check for keywords in the sql that relate to changing data 
CheckForDangerousSqlKeywords: 1
DangerousSqlKeywords: alter,copy,create,createdb,createrole,createuser,delete,drop,exec,execute,grant,insert,update

# Run any sql query - this page is dangerous. You can do anything.
DebugEnableRunSql: 1

# For testing, don't delete incoming emails - process them over and over
DebugSkipDeleteOfIncomingEmails: 0

# This is for testing incoming emails.
# if this is set to a file path, the app won't get emails from a server
# but instead will one email file.
# DebugPathToEmailFile: budoco_logs/corey_email_1.txt
DebugPathToEmailFile:

# This is for writing incoming emails to disk. 
# Write the folder without trailing slash
# DebugFolderToSaveEmails: budoco_logs
DebugFolderToSaveEmails: 
